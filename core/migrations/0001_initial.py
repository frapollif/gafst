# Generated by Django 4.2.3 on 2023-08-23 14:24

import core.validators
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.datetime_safe


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="PermissionsSupport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "permissions": (
                    ("fstb_admin_permissions", "Have FSTB Admin Permissions"),
                    ("club_admin_permissions", "Have Club Admin Permissions"),
                ),
                "managed": False,
                "default_permissions": (),
            },
        ),
        migrations.CreateModel(
            name="Club",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="name")),
                (
                    "affiliation_year",
                    models.PositiveIntegerField(verbose_name="affiliation year"),
                ),
                (
                    "license_no",
                    models.PositiveIntegerField(
                        unique=True,
                        validators=[django.core.validators.MaxValueValidator(99)],
                        verbose_name="license number",
                    ),
                ),
                (
                    "discharge_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="discharge date"
                    ),
                ),
                (
                    "possible_resume_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="possible resume date"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Exam",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("Honor", "HONOR"),
                            ("1st", "FIRST_EXAM"),
                            ("2nd", "SECOND_EXAM"),
                            ("3rd", "THIRD_EXAM"),
                            ("4th", "FORTH_EXAM"),
                            ("R1", "R1"),
                            ("R2", "R2"),
                            ("R3", "R3"),
                        ],
                        default="Honor",
                        max_length=50,
                        unique=True,
                        verbose_name="name",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="JS",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("Monitor J+S", "MONITOR_JS"),
                            ("Monitor J+S Kids", "MONITOR_JS_KIDS"),
                            ("Expert J+S", "EXPERT_JS"),
                            ("Coach J+S", "COACH_JS"),
                        ],
                        default="Monitor J+S",
                        max_length=50,
                        verbose_name="name",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Member",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=150, verbose_name="name")),
                ("surname", models.CharField(max_length=150, verbose_name="surname")),
                (
                    "house_number",
                    models.CharField(max_length=50, verbose_name="house number"),
                ),
                ("street", models.CharField(max_length=100, verbose_name="street")),
                ("city", models.CharField(max_length=100, verbose_name="city")),
                ("zip_code", models.CharField(max_length=20, verbose_name="zip code")),
                (
                    "date_of_birth",
                    models.DateField(
                        default=django.utils.datetime_safe.date.today,
                        validators=[
                            core.validators.BirthdateValidator(max_age=200, min_age=2)
                        ],
                        verbose_name="date of birth",
                    ),
                ),
                (
                    "nationality",
                    models.CharField(max_length=2, verbose_name="nationality"),
                ),
                (
                    "affiliation_year",
                    models.PositiveIntegerField(verbose_name="affiliation year"),
                ),
                (
                    "exams",
                    models.ManyToManyField(
                        blank=True, to="core.exam", verbose_name="exams"
                    ),
                ),
                (
                    "js",
                    models.ManyToManyField(blank=True, to="core.js", verbose_name="js"),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Membership",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "license_no",
                    models.PositiveIntegerField(
                        validators=[django.core.validators.MaxValueValidator(999)],
                        verbose_name="license number",
                    ),
                ),
                (
                    "transfer_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="transfer date"
                    ),
                ),
                (
                    "club",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.club",
                        verbose_name="club",
                    ),
                ),
                (
                    "member",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.member",
                        verbose_name="member",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Role",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        default="Athlete", max_length=50, verbose_name="name"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MembershipChange",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "license_no",
                    models.PositiveIntegerField(
                        validators=[django.core.validators.MaxValueValidator(999)],
                        verbose_name="license number",
                    ),
                ),
                (
                    "transfer_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="transfer date"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Pending", "PENDING"),
                            ("Approved", "APPROVED"),
                            ("Declined", "REJECTED"),
                        ],
                        default="Pending",
                        max_length=10,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "applicant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_applicant",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "club",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.club",
                        verbose_name="club",
                    ),
                ),
                (
                    "member",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.member",
                        verbose_name="member",
                    ),
                ),
                (
                    "membership",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="membership_changes",
                        to="core.membership",
                    ),
                ),
                (
                    "responder",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_responder",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="MemberChange",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=150, verbose_name="name")),
                ("surname", models.CharField(max_length=150, verbose_name="surname")),
                (
                    "house_number",
                    models.CharField(max_length=50, verbose_name="house number"),
                ),
                ("street", models.CharField(max_length=100, verbose_name="street")),
                ("city", models.CharField(max_length=100, verbose_name="city")),
                ("zip_code", models.CharField(max_length=20, verbose_name="zip code")),
                (
                    "date_of_birth",
                    models.DateField(
                        default=django.utils.datetime_safe.date.today,
                        validators=[
                            core.validators.BirthdateValidator(max_age=200, min_age=2)
                        ],
                        verbose_name="date of birth",
                    ),
                ),
                (
                    "nationality",
                    models.CharField(max_length=2, verbose_name="nationality"),
                ),
                (
                    "affiliation_year",
                    models.PositiveIntegerField(verbose_name="affiliation year"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Pending", "PENDING"),
                            ("Approved", "APPROVED"),
                            ("Declined", "REJECTED"),
                        ],
                        default="Pending",
                        max_length=10,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "applicant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_applicant",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "exams",
                    models.ManyToManyField(
                        blank=True, to="core.exam", verbose_name="exams"
                    ),
                ),
                (
                    "js",
                    models.ManyToManyField(blank=True, to="core.js", verbose_name="js"),
                ),
                (
                    "member",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="member_changes",
                        to="core.member",
                    ),
                ),
                (
                    "responder",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_responder",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("roles", models.ManyToManyField(to="core.role", verbose_name="roles")),
                (
                    "user",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="member",
            name="roles",
            field=models.ManyToManyField(to="core.role", verbose_name="roles"),
        ),
        migrations.AddField(
            model_name="member",
            name="user",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="club",
            name="members",
            field=models.ManyToManyField(
                through="core.Membership", to="core.member", verbose_name="members"
            ),
        ),
    ]
